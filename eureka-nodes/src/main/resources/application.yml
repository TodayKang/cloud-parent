#****************Eureka集群配置****************
server:
  servlet.context-path: /@project.artifactId@

spring:
  application:
    name: @project.artifactId@

#****************Eureka配置****************
spring.cloud.config.discovery.enabled: true
eureka:
  instance:
    #是否将自己的 IP 注册到 Eureka Server(默认 false,表示注册微服务所在操作系统的 hostname 到Eureka Server)
    prefer-ip-address: true
    appname: ${spring.application.name}
    home-page-url-path: /${server.servlet.context-path}
    health-check-url-path: ${server.servlet.context-path}/actuator/health
    status-page-url-path: ${server.servlet.context-path}/actuator/info
    #Eureka可以自定义key-value的元数据
    metadata-map:
      service-function: 这是一个注册中心集群

#****************Eureka互相注册地址配置****************
eureka-service-url-1: http://127.0.0.1:1002${server.servlet.context-path}/eureka/,http://127.0.0.1:1003${server.servlet.context-path}/eureka/
eureka-service-url-2: http://127.0.0.1:1001${server.servlet.context-path}/eureka/,http://127.0.0.1:1003${server.servlet.context-path}/eureka/
eureka-service-url-3: http://127.0.0.1:1001${server.servlet.context-path}/eureka/,http://127.0.0.1:1002${server.servlet.context-path}/eureka/

#****************Eureka集群node配置****************
---  ## Eureka Server 1
spring:
  profiles: node1
server:
  port: 1001
eureka:
  instance:
    hostname: node1
  client:
    serviceUrl:
      defaultZone: ${eureka-service-url-1}

---  ## Eureka Server 2
spring:
  profiles: node2
server:
  port: 1002
eureka:
  instance:
    hostname: node2
  client:
    serviceUrl:
      defaultZone: ${eureka-service-url-1}

---  ## Eureka Server 3
spring:
  profiles: node3
server:
  port: 1003
eureka:
  instance:
    hostname: node3
  client:
    serviceUrl:
      defaultZone: ${eureka-service-url-1}

#****************SpringBoot Actuator配置****************
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        exclude:
        include: health,info
  endpoint:
    health:
      enabled: true
      show-details: always
    info:
      enabled: true
  #SpringBoot Actuator禁用某项健康检查
  health:
    redis:
      enabled: false

#****************SpringBoot Actuator info 自定义元数据信息配置****************
info:
  application:
    application-name: ${spring.application.name}
    context-path: ${server.servlet.context-path}
    port: ${server.port}
    maven:
      groupId: @project.groupId@
      artifactId: @project.artifactId@
      version: @project.version@
      packaging: @project.packaging@
      encoding: @project.build.sourceEncoding@
    java:
      source: @java.version@
      target: @java.version@
      version: @java.version@
